    <XDtMethod:ifHasMethodTag tagName="hibernate.property">
        <property
            name="<XDtMethod:propertyName />"
            type="<XDtMethod:methodTagValue tagName="hibernate.property" paramName="type" default="<XDtMethod:methodType/>"/>"
          <XDtConfig:ifConfigParamEquals paramName="version" value="2.0">
            update="<XDtMethod:methodTagValue tagName="hibernate.property" paramName="update" values="true,false" default="true"/>"
            insert="<XDtMethod:methodTagValue tagName="hibernate.property" paramName="insert" values="true,false" default="true"/>"
          </XDtConfig:ifConfigParamEquals>
	  <XDtMethod:ifHasMethodTag tagName="hibernate.property" paramName="formula">
            formula="<XDtMethod:methodTagValue tagName="hibernate.property" paramName="formula" />"
          </XDtMethod:ifHasMethodTag>
          <XDtHibernate:setCurrentTag name="hibernate.property" mappingElement="property">
              <XDtMerge:merge file="xdoclet/modules/hibernate/resources/hibernate-column.xdt">
              </XDtMerge:merge>
          </XDtHibernate:setCurrentTag>
        </XDtMethod:ifHasMethodTag>

    <XDtMethod:ifHasMethodTag tagName="hibernate.many-to-one">
        <many-to-one
            name="<XDtMethod:propertyName/>"
            class="<XDtMethod:methodTagValue tagName="hibernate.many-to-one" paramName="class" default="<XDtMethod:methodType/>" />"
            cascade="<XDtMethod:methodTagValue tagName="hibernate.many-to-one" paramName="cascade" values="none,all,save-update,delete" default="none"/>"
            outer-join="<XDtMethod:methodTagValue tagName="hibernate.many-to-one" paramName="outer-join" values="true,false,auto" default="auto"/>"
          <XDtConfig:ifConfigParamEquals paramName="version" value="2.0">
            <XDtMethod:ifHasMethodTag tagName="hibernate.many-to-one" paramName="property-ref">
            property-ref="<XDtMethod:methodTagValue tagName="hibernate.many-to-one" paramName="property-ref" />"
            </XDtMethod:ifHasMethodTag>
            update="<XDtMethod:methodTagValue tagName="hibernate.many-to-one" paramName="update" values="true,false" default="true"/>"
            insert="<XDtMethod:methodTagValue tagName="hibernate.many-to-one" paramName="insert" values="true,false" default="true"/>"
          </XDtConfig:ifConfigParamEquals>
          <XDtHibernate:setCurrentTag name="hibernate.many-to-one" mappingElement="many-to-one">
               <XDtMerge:merge file="xdoclet/modules/hibernate/resources/hibernate-column.xdt">
               </XDtMerge:merge>
          </XDtHibernate:setCurrentTag>
    </XDtMethod:ifHasMethodTag>

     <XDtMethod:ifHasMethodTag tagName="hibernate.one-to-one">
        <one-to-one
            name="<XDtMethod:propertyName/>"
            class="<XDtMethod:methodTagValue tagName="hibernate.one-to-one" paramName="class" default="<XDtMethod:methodType/>"/>"
            cascade="<XDtMethod:methodTagValue tagName="hibernate.one-to-one" paramName="cascade" values="none,all,save-update,delete" default="none"/>"
            outer-join="<XDtMethod:methodTagValue tagName="hibernate.one-to-one" paramName="outer-join" values="true,false,auto" default="auto"/>"
            constrained="<XDtMethod:methodTagValue tagName="hibernate.one-to-one" paramName="constrained" values="true,false" default="false"/>"
        />
     </XDtMethod:ifHasMethodTag>

     <XDtMethod:ifHasMethodTag tagName="hibernate.component">
        <component
            name="<XDtMethod:propertyName />"
            class="<XDtMethod:methodTagValue tagName="hibernate.component" paramName="class" default="<XDtMethod:methodType/>"/>"
        >
            <XDtClass:pushClass value="<XDtMethod:methodTagValue tagName='hibernate.component' paramName='class' default='<XDtMethod:methodType/>' />">
                <XDtMethod:forAllMethods superclasses="true" sort="true">
                    <XDtMerge:merge file="xdoclet/modules/hibernate/resources/hibernate-properties.xdt">
                    </XDtMerge:merge>
                </XDtMethod:forAllMethods>    
            </XDtClass:pushClass>
        </component>
     </XDtMethod:ifHasMethodTag>

        <XDtMethod:ifHasMethodTag tagName="hibernate.set">
        <set
            <XDtHibernate:roleAttribute/>="<XDtMethod:propertyName/>"
          <XDtMethod:ifHasMethodTag tagName="hibernate.set" paramName="table">
            table="<XDtMethod:methodTagValue tagName="hibernate.set" paramName="table" />"
          </XDtMethod:ifHasMethodTag>
          <XDtMethod:ifHasMethodTag tagName="hibernate.set" paramName="schema">
            schema="<XDtMethod:methodTagValue tagName="hibernate.set" paramName="schema" />"
          </XDtMethod:ifHasMethodTag>
            lazy="<XDtMethod:methodTagValue tagName="hibernate.set" paramName="lazy"  values="true,false" default="false"/>"
          <XDtConfig:ifConfigParamEquals paramName="version" value="1.1">
            readonly="<XDtMethod:methodTagValue tagName="hibernate.set" paramName="readonly"  values="true,false" default="false"/>"
          </XDtConfig:ifConfigParamEquals>
          <XDtConfig:ifConfigParamEquals paramName="version" value="2.0">
            inverse="<XDtMethod:methodTagValue tagName="hibernate.set" paramName="inverse"  values="true,false" default="false"/>"
          </XDtConfig:ifConfigParamEquals>
            cascade="<XDtMethod:methodTagValue tagName="hibernate.set" paramName="cascade" values="none,all,save-update,delete,all-delete-orphan" default="none"/>"
            sort="<XDtMethod:methodTagValue tagName="hibernate.set" paramName="sort" default="unsorted"/>"
          <XDtMethod:ifHasMethodTag tagName="hibernate.set" paramName="order-by">
            order-by="<XDtMethod:methodTagValue tagName="hibernate.set" paramName="order-by" />"
          </XDtMethod:ifHasMethodTag>
          <XDtMethod:ifHasMethodTag tagName="hibernate.set" paramName="where">
            where="<XDtMethod:methodTagValue tagName="hibernate.set" paramName="where" />"
          </XDtMethod:ifHasMethodTag>
        >
          <XDtMerge:merge file="xdoclet/modules/hibernate/resources/hibernate-collections.xdt">
          </XDtMerge:merge>
        </set>
        </XDtMethod:ifHasMethodTag>

        <XDtMethod:ifHasMethodTag tagName="hibernate.bag">
        <bag
            <XDtHibernate:roleAttribute/>="<XDtMethod:propertyName/>"
          <XDtMethod:ifHasMethodTag tagName="hibernate.bag" paramName="table">
            table="<XDtMethod:methodTagValue tagName="hibernate.bag" paramName="table" />"
          </XDtMethod:ifHasMethodTag>
          <XDtMethod:ifHasMethodTag tagName="hibernate.bag" paramName="schema">
            schema="<XDtMethod:methodTagValue tagName="hibernate.bag" paramName="schema" />"
          </XDtMethod:ifHasMethodTag>
            lazy="<XDtMethod:methodTagValue tagName="hibernate.bag" paramName="lazy" values="true,false" default="false"/>"
          <XDtConfig:ifConfigParamEquals paramName="version" value="1.1">
            readonly="<XDtMethod:methodTagValue tagName="hibernate.bag" paramName="readonly" values="true,false" default="false"/>"
          </XDtConfig:ifConfigParamEquals>
          <XDtConfig:ifConfigParamEquals paramName="version" value="2.0">
            inverse="<XDtMethod:methodTagValue tagName="hibernate.bag" paramName="inverse"  values="true,false" default="false"/>"
          </XDtConfig:ifConfigParamEquals>
            cascade="<XDtMethod:methodTagValue tagName="hibernate.bag" paramName="cascade" values="none,all,save-update,delete,all-delete-orphan" default="none"/>"
          <XDtMethod:ifHasMethodTag tagName="hibernate.bag" paramName="order-by">
            order-by="<XDtMethod:methodTagValue tagName="hibernate.bag" paramName="order-by" />"
          </XDtMethod:ifHasMethodTag>
          <XDtMethod:ifHasMethodTag tagName="hibernate.bag" paramName="where">
            where="<XDtMethod:methodTagValue tagName="hibernate.bag" paramName="where" />"
          </XDtMethod:ifHasMethodTag>
        >
          <XDtMerge:merge file="xdoclet/modules/hibernate/resources/hibernate-collections.xdt">
          </XDtMerge:merge>
        </bag>
        </XDtMethod:ifHasMethodTag>

    <XDtMethod:ifHasMethodTag tagName="hibernate.list">
        <list
            <XDtHibernate:roleAttribute/>="<XDtMethod:propertyName/>"
          <XDtMethod:ifHasMethodTag tagName="hibernate.list" paramName="table">
            table="<XDtMethod:methodTagValue tagName="hibernate.list" paramName="table" />"
          </XDtMethod:ifHasMethodTag>
          <XDtMethod:ifHasMethodTag tagName="hibernate.list" paramName="schema">
            schema="<XDtMethod:methodTagValue tagName="hibernate.list" paramName="schema" />"
          </XDtMethod:ifHasMethodTag>
            lazy="<XDtMethod:methodTagValue tagName="hibernate.list" paramName="lazy" values="true,false" default="false"/>"
          <XDtConfig:ifConfigParamEquals paramName="version" value="2.0">
            inverse="<XDtMethod:methodTagValue tagName="hibernate.list" paramName="inverse"  values="true,false" default="false"/>"
          </XDtConfig:ifConfigParamEquals>
            cascade="<XDtMethod:methodTagValue tagName="hibernate.list" paramName="cascade" values="none,all,save-update,delete,all-delete-orphan" default="none"/>"
          <XDtMethod:ifHasMethodTag tagName="hibernate.list" paramName="where">
            where="<XDtMethod:methodTagValue tagName="hibernate.list" paramName="where" />"
          </XDtMethod:ifHasMethodTag>
        >
          <XDtMerge:merge file="xdoclet/modules/hibernate/resources/hibernate-collections.xdt">
          </XDtMerge:merge>
        </list>
        </XDtMethod:ifHasMethodTag>

        <XDtMethod:ifHasMethodTag tagName="hibernate.map">
        <map
            <XDtHibernate:roleAttribute/>="<XDtMethod:propertyName/>"
          <XDtMethod:ifHasMethodTag tagName="hibernate.map" paramName="table">
            table="<XDtMethod:methodTagValue tagName="hibernate.map" paramName="table" />"
          </XDtMethod:ifHasMethodTag>
          <XDtMethod:ifHasMethodTag tagName="hibernate.map" paramName="schema">
            schema="<XDtMethod:methodTagValue tagName="hibernate.map" paramName="schema" />"
          </XDtMethod:ifHasMethodTag>
            lazy="<XDtMethod:methodTagValue tagName="hibernate.map" paramName="lazy"  values="true,false" default="false"/>"
            sort="<XDtMethod:methodTagValue tagName="hibernate.map" paramName="sort" default="unsorted"/>"
          <XDtConfig:ifConfigParamEquals paramName="version" value="2.0">
            inverse="<XDtMethod:methodTagValue tagName="hibernate.map" paramName="inverse"  values="true,false" default="false"/>"
          </XDtConfig:ifConfigParamEquals>
            cascade="<XDtMethod:methodTagValue tagName="hibernate.map" paramName="cascade" values="none,all,save-update,delete,all-delete-orphan" default="none"/>"
          <XDtMethod:ifHasMethodTag tagName="hibernate.map" paramName="order-by">
            order-by="<XDtMethod:methodTagValue tagName="hibernate.map" paramName="order-by" />"
          </XDtMethod:ifHasMethodTag>
          <XDtMethod:ifHasMethodTag tagName="hibernate.map" paramName="where">
            where="<XDtMethod:methodTagValue tagName="hibernate.map" paramName="where" />"
          </XDtMethod:ifHasMethodTag>
        >
          <XDtMerge:merge file="xdoclet/modules/hibernate/resources/hibernate-collections.xdt">
          </XDtMerge:merge>
        </map>
        </XDtMethod:ifHasMethodTag>

        <XDtMethod:ifHasMethodTag tagName="hibernate.array">
        <array
            <XDtHibernate:roleAttribute/>="<XDtMethod:propertyName/>"
          <XDtMethod:ifHasMethodTag tagName="hibernate.array" paramName="table">
            table="<XDtMethod:methodTagValue tagName="hibernate.array" paramName="table" />"
          </XDtMethod:ifHasMethodTag>
          <XDtMethod:ifHasMethodTag tagName="hibernate.array" paramName="schema">
            schema="<XDtMethod:methodTagValue tagName="hibernate.array" paramName="schema" />"
          </XDtMethod:ifHasMethodTag>
          <XDtMethod:ifHasMethodTag tagName="hibernate.array" paramName="element-class">
            element-class="<XDtMethod:methodTagValue tagName="hibernate.array" paramName="element-class" />"
          </XDtMethod:ifHasMethodTag>
          <XDtConfig:ifConfigParamEquals paramName="version" value="2.0">
            inverse="<XDtMethod:methodTagValue tagName="hibernate.array" paramName="inverse"  values="true,false" default="false"/>"
          </XDtConfig:ifConfigParamEquals>
            cascade="<XDtMethod:methodTagValue tagName="hibernate.array" paramName="cascade" values="none,all,save-update,delete,all-delete-orphan" default="none"/>"
          <XDtMethod:ifHasMethodTag tagName="hibernate.array" paramName="where">
            where="<XDtMethod:methodTagValue tagName="hibernate.array" paramName="where" />"
          </XDtMethod:ifHasMethodTag>
        >
          <XDtMerge:merge file="xdoclet/modules/hibernate/resources/hibernate-collections.xdt">
          </XDtMerge:merge>
        </array>
        </XDtMethod:ifHasMethodTag>

        <XDtMethod:ifHasMethodTag tagName="hibernate.primitive-array">
        <primitive-array
            <XDtHibernate:roleAttribute/>="<XDtMethod:propertyName/>"
          <XDtMethod:ifHasMethodTag tagName="hibernate.primitive-array" paramName="table">
            table="<XDtMethod:methodTagValue tagName="hibernate.primitive-array" paramName="table" />"
          </XDtMethod:ifHasMethodTag>
          <XDtMethod:ifHasMethodTag tagName="hibernate.primitive-array" paramName="schema">
            schema="<XDtMethod:methodTagValue tagName="hibernate.primitive-array" paramName="schema" />"
          </XDtMethod:ifHasMethodTag>
          <XDtMethod:ifHasMethodTag tagName="hibernate.primitive-array" paramName="where">
            where="<XDtMethod:methodTagValue tagName="hibernate.primitive-array" paramName="where" />"
          </XDtMethod:ifHasMethodTag>
        >
          <XDtMerge:merge file="xdoclet/modules/hibernate/resources/hibernate-collections.xdt">
          </XDtMerge:merge>
        </primitive-array>
        </XDtMethod:ifHasMethodTag>
