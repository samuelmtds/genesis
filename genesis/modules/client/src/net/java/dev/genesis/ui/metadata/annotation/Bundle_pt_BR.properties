AT_MEMBER_X_Y=( no membro {0}:{1} )
AT_X_Y_Z=( em {0}.{1}({2}) )
X_CANNOT_BE_USED_AS_A_FORM_ANNOTATION_AT_Y={0} n\u00e3o pode ser utilizada como uma anota\u00e7\u00e3o de um form ( em {1} )
X_CANNOT_BE_USED_TO_ANNOTATE_A_PROPERTY_Y={0} n\u00e3o pode ser utilizada para anotar uma propriedade {1}
X_CANNOT_BE_USED_TO_ANNOTATE_A_PROPERTY_FIX_SUGGESTION_Y={0} n\u00e3o pode ser utilizada para anotar uma propriedade; talvez removendo o prefixo get do m\u00e9todo resolver\u00e1 o problema {1}
X_CANNOT_BE_USED_TO_ANNOTATE_A_METHOD_Y={0} n\u00e3o pode ser utilizada para anotar um m\u00e9todo {1}
X_MUST_BE_ACTION_Y={0} deve ser utilizada com um m\u00e9todo anotado com @Action {1}
X_MUST_BE_PROPERTY_OR_DATA_PROVIDER_Y={0} deve ser utilizado com um getter ou um m\u00e9todo anotado com @DataProvider {1}
X_MUST_BE_PROPERTY_OR_ACTION_Y={0} deve ser utilizado com um getter ou um m\u00e9todo anotado com @Action {1}
AT_LEAST_ONE_OF_OPTIONS_MUST_BE_SPECIFIED_FOR_DATAPROVIDER_X=Pelo menos widgetName, objectField ou indexField deve ser especificado para um @DataProvider {0}
DATAPROVIDER_OBJECTFIELD_REFERS_TO_X_BUT_PUBLIC_PROPERTY_DOES_NOT_EXIST=O objectField do @DataProvider refere-se a ''{0}'', mas tal propriedade p\u00fablica n\u00e3o existe; talvez criando public <type> get{1}() e public void set{1}(<type> var) resolver\u00e1 o problema {2}
DATAPROVIDER_OBJECTFIELD_REFERS_TO_X_BUT_IT_IS_NOT_A_READ_WRITE_PROPERTY=O objectField do @DataProvider refere-se a ''{0}'', mas esta n\u00e3o \u00e9 uma propriedade de escrita-leitura; talvez criando public <type> get{1}() e public void set{1}(<type> var) resolver\u00e1 o problema {2}
DATAPROVIDER_OBJECTFIELD_REFERS_TO_X_BUT_IT_IS_NOT_A_PRIMITIVE_OR_ARRAY_OF_PRIMITIVES=O objectField do @DataProvider refere-se a ''{0}'', mas este n\u00e3o pode ser um primitivo ou um array de primitivos {1}
DATAPROVIDER_INDEXFIELD_REFERS_TO_X_BUT_SUCH_PUBLIC_PROPERTY_DOES_NOT_EXIST=O indexField do @DataProvider refere-se a ''{0}'', mas tal propriedade p\u00fablica n\u00e3o existe; talvez criando public <type> get{1}() e public void set{1}(<type> var) resolver\u00e1 o problema {2}
DATAPROVIDER_INDEXFIELD_REFERS_TO_X_BUT_IT_IS_NOT_A_READ_WRITE_PROPERTY=O indexField do @DataProvider refere-se a ''{0}'', mas esta n\u00e3o \u00e9 uma propriedade de escrita-leitura; talvez criando public <type> get{1}() e public void set{1}(<type> var) resolver\u00e1 o problema {2}
DATAPROVIDER_INDEXFIELD_REFERS_TO_X_BUT_IT_IS_NOT_AN_INTEGER_INT_ARRAY_COLLECTION=O indexField do @DataProvider refere-se a ''{0}'', mas este n\u00e3o \u00e9 um Integer, int, array dos tipos citados anteriormente nem mesmo uma java.util.Collection {1}
X_MUST_DEFINE_AT_LEAST_ONE_SCRIPT_CONDITION_Y=@{0} deve definir pelo menos uma condi\u00e7\u00e3o de script {1}
VISIBLEWHEN_MUST_DEFINE_AT_LEAST_ONE_SCRIPT_CONDITION_OR_PAIRS_OF_SCRIPT_CONDITIONS_X=@VisibleWhen deve definir pelo menos uma, ou pares de condi\u00e7\u00f5es de script {0}