<?xml version="1.0" encoding="ISO-8859-1"?>
<document>
  <properties>
    <title>genesis</title>
    <author email="mister__m@dev.java.net">Michael Nascimento Santos</author>
    <author email="pmadril@uol.com.br">Pablo Jorge Madril</author>
  </properties>
  <body>
    <section name="Welcome to genesis">
      <p><b>genesis</b> is an open-source framework that aims to bring <b>
      simplicity, productivity, testability and scalability</b> to enterprise
      application development.</p>
      <p>It combines several public libraries that have been largely adopted by
      industry  in an unique way, such as <b>Hibernate, AspectWerkz, Thinlet,
      Jakarta-Commons</b> and others, and puts together all of the experience
      <b>Summa</b> has acquired over the years in building mission-critical
      applications.</p>
      <p>It has been developed and tested based on real user requirements and is
      the result of experience gained during project execution. One of the
      customer solutions built using genesis is currently processing over 1
      million transactions per day, a fact that proves framework scalability.</p
      >
    </section>
    <section name="Main features">
      <p>Among genesis' main features, the following ones are noteworthy:</p>
        <ul>
          <li><b>Simplicity:</b> there are no complex requirements to use the
          framework: your components don't need to extend classes, it's not
          necessary to expose them through an interface, it's not necessary to
          configure loads of xml per component nor even to get an instance using
          a factory or an
          interface.</li>
          <li><b>Productivity:</b> your code basically is about business logic
          and the framework is easy to understand, what makes it possible for
          developers who just know the basics about Java to become extremely
          productive in a short time frame.</li>
          <li><b>Testability:</b> genesis has been conceived so that unit tests
          can be written even for user interface components.</li>
          <li><b>Scalability:</b> its stateless and contention-less architecture
          makes it possible for a programmer to effortlessly develop scalable
          solutions.</li>
          <li><b>Transparent remoting:</b> by using AOP, a method call can
          easily be configured to execute remotely or in a transactional
          context with no changes to client code.</li>
          <li><b>UI development support:</b> genesis-client makes UI
          development extremely simple. By putting together a couple of ordinary
          JavaBeans and a few lines of configuration, it's possible to control
          all UI flow and common characteristics, such as visibility, enabling /
          disabling fields, cascade clearing fields, calling methods under some
          circumstances and automatically populating components such as
          comboboxes and tables.</li>
          <li><b>Hibernate integration:</b> Hibernate integration allows easy
          assembling of paged searches, dynamic queries, etc.</li>
        </ul>
    </section>
  </body>
</document>
