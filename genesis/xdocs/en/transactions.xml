<?xml version="1.0" encoding="ISO-8859-1"?>
<document>
  <properties>
    <title>Transaction support</title>
    <author email="mister__m@dev.java.net">Michael Nascimento Santos</author>
  </properties>
  <body>
    <section name="Transaction support">
      <p>To run a method inside a transaction, one need simply use the
      <code>@Transactional</code> annotation in quite a similar way as in the
      use of <code>@Remotable</code>. See below:</p>
<source>
@Transactional
public void transactionalMethod() {
   // method code
}
</source>
      <p>The use of <code>@Transactional</code> automatically applies a
      <code>@Remotable</code> annotation to the method. This way the use of only
      one of these annotation above in a given method is needed. Besides
      maintaining transparent remoting characteristics,
      <code>@Transactional</code> forces the method to be executed inside a JTA
      transaction. Any other JTA resources accessed inside its execution will be
      automatically included in the same transaction. The transaction context
      will be propagated to any other method or component invoked by the first
      method with a <code>@Transactional</code> annotation, without the need of
      any additional coding.</p>
      <p>If the method execution runs as expected, the transaction will be
      committed at the end of the method. In the case an exception, a
      rollback command will be issued and the exception will be forwarded to the
      client-side's code.</p>
    </section>
  </body>
</document>