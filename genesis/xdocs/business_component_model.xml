<?xml version="1.0" encoding="ISO-8859-1"?>
<document>
  <properties>
    <title>Modelo de componentes de negócio</title>
    <author email="mister__m@dev.java.net">Michael Nascimento Santos</author>
  </properties>
  <body>
    <section name="Modelo de componentes de negócio">
      <p><b>TODO: configurar todos os exemplos em um sample e atualizar
      documento com instruções de execução.</b></p>
      <p>O modelo de componentes de negócio do genesis é bastante simples de ser
      compreendido.</p>
      <p>Suponhamos que exista um componente chamado <code>ExemploSoma</code>
      como abaixo:</p>
      <source>
 1. public class ExemploSoma {
 2.    public int soma(int a, int b) {
 3.       System.out.println("a = " + a);
 4.       System.out.println("b = " + b);
 5.
 6.       int soma = a + b;
 7.
 8.       System.out.println("a + b = " + soma);
 9.
10.       return soma;
11.    }
12.
13.    public static void main(String[] args) {
14.       System.out.println(new ExemploSoma().soma(2, 2));
15.    }
16. }
      </source>
      <p>Ao executar esse código, a seguinte saída é impressa no console local:
      </p>
      <source>
a = 2
b = 2
a + b = 4
4
      </source>
      <p>Pode-se tornar o método <code>soma(int, int)</code> remoto apenas por
      se acrescentar a anotação <code>@Remotable</code>. O código
      modificado ficaria da seguinte forma:</p>
      <source>
 1. public class ExemploSomaRemota {
 2.    /**
 3.     * @Remotable
 4.     */
 5.    public int soma(int a, int b) {
 6.       System.out.println("a = " + a);
 7.       System.out.println("b = " + b);
 8.
 9.       int soma = a + b;
10.
11.       System.out.println("a + b = " + soma);
12.
13.       return soma;
14.    }
15.
16.    public static void main(String[] args) {
17.       System.out.println(new ExemploSomaRemota().soma(2, 2));
18.    }
19. }
      </source>
      <p>Executando-se o novo código com o JBoss iniciado, observa-se uma
      redução na saída no console
      local:</p>
      <source>
4
      </source>
      <p>Ao observar o console do JBoss, pode-se notar que as mensagens
      anteriores foram impressas no servidor. Por que isso acontece?</p>
      <p>A saída observada no console local equivale ao resultado da execução
      da linha 17. Porém, as outras instruções de <code>System.out.println</code
      > das linhas 6, 7 e 11 encontram-se dentro de um método anotado como <code
      >@Remotable</code> e por isso são executadas de forma diferente. Métodos
      anotados com <code>@Remotable</code> são interceptados através de um
      aspecto do genesis-aspect que transfere a instância em que o método foi
      invocado para o servidor, executando-o ali e transferindo o resultado de
      volta para o cliente. Essa característica é chamada de <b>remotabilidade
      transparente</b>.</p>
    </section>
  </body>
</document>
