<?xml version="1.0" encoding="ISO-8859-1"?>
<document>
  <properties>
    <title>Suporte a transações</title>
    <author email="mister__m@dev.java.net">Michael Nascimento Santos</author>
  </properties>
  <body>
    <section name="Suporte a transações">
      <p>Para executar um método dentro de uma transação, basta usar a anotação
      <code>@Transactional</code> de forma similar ao uso de <code>@Remotable
      </code>, como abaixo:</p>
      <source>
@Transactional
public void metodoTransacional() {
   // codigo do metodo
}
</source>
      <p>O uso de <code>@Transactional</code> automaticamente implica em tornar
      um método <code>@Remotable</code>, de modo que o uso de apenas uma dessas
      anotações por método é necessário. Além de manter as características de
      remotabilidade transparente, <code>@Transactional</code> faz com que o
      método seja executado dentro de uma transação JTA. Quaisquer recursos
      transacionais que sejam acessados durante sua execução e tenham suporte a
      JTA serão automaticamente incluídos na transação. O contexto transacional
      se propagará automaticamente para qualquer outro componente ou método que
      for invocado durante a execução do método <code>@Transactional</code>, sem
      que nenhuma programação adicional tenha de ser feita para isso.</p>
      <p>Se a execução do método transcorrer normalmente, a transação será
      automaticamente comitada ao final. Caso seja lançada qualquer exceção
      haverá rollback automático das alterações e a exceção será propagada
      diretamente ao código cliente.</p>
    </section>
  </body>
</document>