<?xml version="1.0" encoding="ISO-8859-1"?>
<document>
  <properties>
    <title>Guia avançado</title>
    <author email="mister__m@dev.java.net">Michael Nascimento Santos</author>
  </properties>
  <body>
    <section name="Guia avançado">
      <p align="justify">Esta seção contém a documentação avançada do genesis
      e sua leitura é necessária somente para desenvolvedores que desejem
      entender ou estender o núcleo do framework. Embora haja um esforço grande
      da parte dos desenvolvedores do genesis para que todas as mudanças de
      código sejam compatíveis com código escrito para as versões anteriores,
      visto que toda a informação contida nesta parte da documentação está
      intrinsicamente ligada a forma com que as funcionalidades são
      implementadas, pode haver mudancas incompatíveis nas classes e opções
      aqui descritas.</p>
      <p>Caso você use algum dos recursos documentados aqui, por favor
      informe a <a href="../mail-lists.html">lista de usuários</a> para
      minimizar as chances de que seu código não funcione nas versões
      posteriores do genesis.</p>
    </section>
    <section name="Versões das dependências">
      <p>Para saber as versões dos jars das dependências, consulte o relatório
      de dependências do Maven para os módulos:</p>
      <ul>
        <li><a href="../multiproject/genesis-aspect/dependencies.html">genesis-aspect</a></li>
        <li><a href="../multiproject/genesis-client/dependencies.html">genesis-client</a></li>
        <li><a href="../multiproject/genesis-server/dependencies.html">genesis-server</a></li>
        <li><a href="../multiproject/genesis-shared/dependencies.html">genesis-shared</a></li>
      </ul>
    </section>
    <section name="Tratamento das anotações">
      <p>As diversas anotações do genesis são tratadas uniformemente pelos
      diversos componentes que as manipulam. Uma regra básica é seguida: as
      anotações são herdadas quando o elemento de código (classe/método) não é
      sobrescrito e ignoradas caso contrário. Um exemplo torna isso claro:</p>
<source>
/**
 * @Form
 */
public class FormPai {
  /**
   * @EnabledWhen condicao1
   */
  public String getPropriedade1() { ... }

  /**
   * @EnabledWhen condicao2
   */
  public String getPropriedade2() { ... }

  // ...
}
</source>
<source>
public class FormFilho extends FormPai {
  public String getPropriedade1() { ... }

  // ...
}
</source>
      <p>A classe <code>FormFilho</code> não contém a anotação
      <code>@Form</code> para o genesis, assim como o seu método
      <code>getPropriedade1()</code> não contém a anotação
      <code>@EnabledWhen</code>. Já o método <code>getPropriedade2()</code>
      contém a anotação herdada de <code>FormPai</code>, visto que não foi
      sobrescrito.</p>
      <p>Caso se desejasse que os elementos de <code>FormFilho</code>
      contivessem as mesmas anotações de <code>FormPai</code>, seria necessário
      usá-las explicitamente também em <code>FormFilho</code>.</p>
    </section>
  </body>
</document>