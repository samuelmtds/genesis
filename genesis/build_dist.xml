<?xml version="1.0" encoding="UTF-8"?>
<project default="genesis:dist" name="genesis distribution build" basedir=".">
   <property file="build.properties" />
   <property file="project.properties" />
   <property name="build.dir" value="${genesis.build.dir}" />
   <property name="build.docs" value="${build.dir}/docs" />
   <property name="xdoclet.dist" value="xdoclet/dist" />

   <condition property="executableSuffix" value="">
      <not>
         <os family="dos" />
      </not>
   </condition>

   <condition property="executableSuffix" value=".bat">
      <os family="dos" />
   </condition>

   <!-- Call using maven or build site before -->
   <target name="genesis:dist" description="Generate genesis distribution">
      <echo>This target must be called using maven... or build site before (maven genesis:site).</echo>

      <!-- Problems with <ant ...>, <antcall ...> or <subant...>. TODO: See what's happening -->
      <exec dir="${ant.home}/bin" executable="ant${executableSuffix}" failifexecutionfails="true" failonerror="true">
         <arg line="-f ${basedir}/../xdoclet/build.xml" />
      </exec>
      
      <exec dir="${ant.home}/bin" executable="ant${executableSuffix}" failifexecutionfails="true" failonerror="true">
         <arg line="-f ${basedir}/build.xml genesis:jar" />
      </exec>

      <mkdir dir="${build.dir}" />
      <delete>
         <fileset dir="${build.dir}">
            <include name="*.zip" />
            <include name="*.tar.gz" />
         </fileset>
      </delete>

      <exec dir="${ant.home}/bin" executable="ant${executableSuffix}" failifexecutionfails="true" failonerror="true">
         <arg line="-f ${basedir}/../samples/useradmin/build.xml useradmin:dist" />
      </exec>

      <patternset id="genesis-license.pattern">
         <include name="genesis/LICENSE.txt" />
         <include name="genesis/lgpl.txt" />
      </patternset>

      <patternset id="genesis-dist.pattern">
         <patternset refid="genesis-license.pattern" />
         <include name="genesis/${genesis.dist.dir}/**" />
      </patternset>

      <patternset id="genesis-dependencies.pattern">
         <patternset refid="genesis-license.pattern" />
         <include name="genesis/${genesis.lib.dir}/**" />
      </patternset>

      <patternset id="genesis-empty-project.pattern">
         <patternset refid="genesis-license.pattern" />
         <include name="samples/empty-project/*" />
         <include name="samples/empty-project/modules/**" />
         <include name="samples/empty-project/webstart/**" />
         <exclude name="samples/empty-project/.*" />
         <exclude name="samples/empty-project/build.properties" />
      </patternset>

      <patternset id="genesis-useradmin-sample.pattern">
         <patternset refid="genesis-license.pattern" />
         <include name="samples/useradmin/*" />
         <include name="samples/useradmin/modules/**" />
         <include name="samples/useradmin/webstart/**" />
         <include name="samples/useradmin/dist/**" />
         <exclude name="samples/useradmin/.*" />
         <exclude name="samples/useradmin/**/${build.dir}/**/*" />
         <exclude name="samples/useradmin/**/build.properties" />
      </patternset>

      <patternset id="genesis-src.pattern">
         <patternset refid="genesis-license.pattern" />
         <include name="genesis/${genesis.modules.dir}/**" />
         <include name="genesis/${genesis.xdoc.dir}/**" />
         <include name="genesis/*" />
         <exclude name="genesis/.*"/>
         <exclude name="genesis/**/${build.dir}/**/*"/>
         <exclude name="genesis/**/build.properties"/>
      </patternset>

      <patternset id="genesis-docs.pattern">
         <patternset refid="genesis-license.pattern" />
         <include name="${build.docs}/**" />
      </patternset>

      <patternset id="genesis-xdoclet-extensions.pattern">
         <patternset refid="genesis-license.pattern" />
         <include name="${xdoclet.dist}/xdoclet-*.jar" />
      </patternset>

      <patternset id="genesis-all.pattern">
         <patternset refid="genesis-license.pattern" />
         <patternset refid="genesis-dist.pattern" />
         <patternset refid="genesis-dependencies.pattern" />
         <patternset refid="genesis-empty-project.pattern" />
         <patternset refid="genesis-useradmin-sample.pattern" />
         <patternset refid="genesis-src.pattern" />
         <patternset refid="genesis-docs.pattern" />
         <patternset refid="genesis-xdoclet-extensions.pattern" />
      </patternset>

      <antcall target="generate.dist">
         <param name="dist.type" value="genesis-dist" />
      </antcall>
      <antcall target="generate.dist">
         <param name="dist.type" value="genesis-dependencies" />
      </antcall>
      <antcall target="generate.dist">
         <param name="dist.type" value="genesis-empty-project" />
      </antcall>
      <antcall target="generate.dist">
         <param name="dist.type" value="genesis-useradmin-sample" />
      </antcall>
      <antcall target="generate.dist">
         <param name="dist.type" value="genesis-src" />
      </antcall>
      <antcall target="generate.dist.with.docs">
         <param name="dist.type" value="genesis-docs" />
      </antcall>
      <antcall target="generate.dist">
         <param name="dist.type" value="genesis-xdoclet-extensions" />
      </antcall>
      <antcall target="generate.dist.with.docs">
         <param name="dist.type" value="genesis-all" />
      </antcall>
   </target>

   <target name="generate.dist">
      <echo>Generating ${dist.type}...</echo>
      <zip destfile="${build.dir}/${dist.type}-${genesis.version}.zip">
         <zipfileset dir="../" prefix="genesis-${genesis.version}">
            <patternset refid="${dist.type}.pattern" />
         </zipfileset>
      </zip>
      <tar longfile="gnu" tarfile="${build.dir}/${dist.type}-${genesis.version}.tar.gz" compression="gzip">
         <tarfileset dir="../" prefix="genesis-${genesis.version}">
            <patternset refid="${dist.type}.pattern" />
         </tarfileset>
      </tar>
   </target>

   <target name="generate.dist.with.docs">
      <echo>Generating ${dist.type}...</echo>
      <zip destfile="${build.dir}/${dist.type}-${genesis.version}.zip">
         <zipfileset dir="../" prefix="genesis-${genesis.version}">
            <patternset refid="${dist.type}.pattern" />
         </zipfileset>
         <zipfileset dir="${build.docs}" prefix="genesis-${genesis.version}/docs" />
      </zip>
      <tar longfile="gnu" tarfile="${build.dir}/${dist.type}-${genesis.version}.tar.gz" compression="gzip">
         <tarfileset dir="../" prefix="genesis-${genesis.version}">
            <patternset refid="${dist.type}.pattern" />
         </tarfileset>
         <tarfileset dir="${build.docs}" prefix="genesis-${genesis.version}/docs" />
      </tar>
   </target>

</project>